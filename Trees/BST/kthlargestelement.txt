#include<stdio.h>
#include<stdlib.h>

struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

struct Node* createNode(int x) {
    struct Node* newnode = (struct Node*)malloc(sizeof(struct Node));
    newnode->data = x;
    newnode->left = newnode->right = NULL;
    return newnode;
}

struct Node* insert(struct Node* root,int x){
    if(root == NULL) {
        root = createNode(x);
        return root;
    }
    if(x<root->data ) {
        root->left = insert(root->left,x);
    }
    else if(x>root->data){
        root->right = insert(root->right,x);
    }
    return root;
}


void inorder(struct Node* root) {
    if(root == NULL) return;
    inorder(root->left);
    printf("%d ",root->data);
    inorder(root->right);
}
void klargestutil(struct Node* root,int k,int* count,int *res){
    if(root == NULL || *count>=k){
        return;
    }
    klargestutil(root->right,k,count,res);
    (*count)++;
    if(*count == k) {
        *res = root->data;
        return;
    }
    klargestutil(root->left,k,count,res);
}

int klargest(struct Node* root,int k) {
    int count = 0;
    int res = -1;
  klargestutil(root,k,&count,&res);
    return res;
    
}
int main() {
    struct Node* root = NULL;
    int x;
    printf("Enter the elements ");
    while(1){
        scanf("%d",&x);
        if(x ==-1) break;
        root = insert(root,x);
    }
   inorder(root);
   printf("\n%d ",klargest(root,2));
   
}