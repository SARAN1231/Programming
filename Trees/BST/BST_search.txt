#include<stdio.h>
#include<stdlib.h>
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

struct Node* createnode(int x){
    struct Node* newnode;
    newnode = (struct Node*)malloc(sizeof(struct Node));
    newnode->data = x;
    return newnode;
}

struct Node* insert(struct Node* root,int x) {
    if(root==NULL) {
        root = createnode(x);
        return root;
    }
    
    if(x<root->data){
        root->left = insert(root->left,x);
    }
    else if(x>root->data){
        root->right = insert(root->right,x);
    }
    return root;
}

struct Node* search(struct Node* root,int key) {
    if(root == NULL || root->data == key) return root;
    if(key < root->data) return search(root->left,key);
    else
     return search(root->right,key);
}
void preorder(struct Node* root) {
    if(root == NULL) return;
    
    printf("%d ",root->data);
    preorder(root->left);
    preorder(root->right);
}
int main() {
    struct Node* root = NULL;
    int x;

    printf("Enter values to insert into the BST (enter -1 to stop):\n");
    while (1) {
        scanf("%d", &x);
        if (x == -1) break;
        root = insert(root, x);
    }

    printf("Preorder traversal:\n");
    preorder(root);
    
    int y;
    printf("\nEnter the element u want to search ");
    scanf("%d",&y);
    if(search(root,y) == NULL) {
        printf("\n%d is not found ",y);
    }
    else{
        printf("\n%d is found",y);
    }
    
    return 0;
}