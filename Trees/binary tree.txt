#include<stdio.h>
#include<stdlib.h>
  struct node {
      int data;
      struct node* left,*right;
  };
  
  struct node* create() {
      int x;
      struct node *newnode;
      newnode = (struct node*)malloc(sizeof(struct node*));
      printf(" (-1 for no node)");
      scanf("%d",&x);
       if(x==-1) return 0;
      newnode->data = x;
      printf("Enter left data of %d",x);
      newnode->left = create();
      printf("Enter right data of %d",x);
      newnode ->right = create();
      return newnode;  
  }
  void inorder(struct node* root) {
        
      if(root == 0) return;
    
      else{
          inorder(root->left);
          printf("%d",root->data);
          inorder(root->right);
      }
  }
  void postorder(struct node* root) {
        
      if(root == 0) return;
    
      else{
          postorder(root->left);
         
          postorder(root->right);
           printf("%d",root->data);
      }
  }
  void preorder(struct node* root) {
        
      if(root == 0) return;
    
      else{
          printf("%d",root->data);
          preorder(root->left);
          preorder(root->right);
      }
  }
  
  int main(){
      struct node *root;
      root = create();
      printf("inorder ");
      inorder(root);
      printf("\n");
      printf("preorder ");
      preorder(root);
       printf("\n");
      printf("postorder ");
      postorder(root);
  }

o/p:

 (-1 for no node)5
Enter left data of 5 (-1 for no node)6
Enter left data of 6 (-1 for no node)-1
Enter right data of 6 (-1 for no node)-1
Enter right data of 5 (-1 for no node)7
Enter left data of 7 (-1 for no node)-1
Enter right data of 7 (-1 for no node)-1
inorder 657
preorder 567
postorder 675