class GfG
{
    void sumleafutil(Node root,int[] sum){
        if(root == null) return;
        if(root.left == null && root.right == null) {
            sum[0]+=root.data;
        }
        sumleafutil(root.left,sum);
        sumleafutil(root.right,sum);
    }
    public int SumofLeafNodes(Node root)
    {
        // your code here
        int[] sum = {0};
        sumleafutil(root,sum);
        return sum[0];
    }
}

class Solution
{
    //Function to return the lowest common ancestor in a Binary Tree.
	Node lca(Node root, int p,int q)
	{
		// Your code here
		if(root == null) return null;
		     if (root.data == p || root.data == q) return root;

        // Look for keys in left and right subtrees
        Node leftLCA = lca(root.left, p, q);
        Node rightLCA = lca(root.right, p, q);
        if (leftLCA != null && rightLCA != null) return root;

        return (leftLCA != null) ? leftLCA : rightLCA;
	}
}