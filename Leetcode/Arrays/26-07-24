class Solution {
    public int maximumCount(int[] nums) {
        int p =0;
        int n=0;
        for(int i: nums) {
            if(i <0) n++;
            else if (i>0) p++;
        }
        return (p>n) ? p:n;
    }
}

class Solution {
    public int similarPairs(String[] words) {
        int count =0;

        for(int i=0;i<words.length-1;i++) {
            HashSet<Character> ans = new HashSet<>();
           for (char c : words[i].toCharArray()) {
                ans.add(c);
            }
            for(int j=i+1;j<words.length;j++) {
               HashSet<Character> ans1 = new HashSet<>();
                for (char c : words[j].toCharArray()) {
                ans1.add(c);
            }
                if(ans.equals(ans1)){
                    count++;
                }
            }
        }
        return count;
    }
}
