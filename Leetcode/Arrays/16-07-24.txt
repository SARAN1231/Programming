class Solution {
    public int numberOfPoints(List<List<Integer>> nums) {
        HashSet<Integer> res = new HashSet<>();
        List<Integer> ans = new ArrayList<>();
        for(List<Integer> arr : nums) {
            for(int i = arr.get(0) ; i<=arr.get(1);i++) {
                ans.add(i);
            }
        }
        for(int i : ans) {
            res.add(i);
        }
        return res.size();
    }
}

class Solution {
    public List<List<Integer>> generate(int n) {
        List<List<Integer>> triangle = new ArrayList<>();
        for(int i=0;i<n;i++) {
            List<Integer> row = new ArrayList<>();
            row.add(1);
             if(i>0) {
                List<Integer> prevrow = triangle.get(i-1);
                for(int j = 1;j<i;j++){
                    row.add(prevrow.get(j) + prevrow.get(j-1));
                }
                row.add(1);
             }
             triangle.add(row);
        }
        return triangle;
    }
}


class Solution {
    public int minDeletionSize(String[] strs) {
        int count =0;
        for(int i=0;i<strs[0].length();i++) {
            for(int j=1;j<strs.length;j++) {
                if(strs[j-1].charAt(i) > strs[j].charAt(i)) {
                     count++;
                     break;
                }
            }
        }
        return count;
    }
}