class Solution {
    public int countSeniors(String[] details) {
        int count =0;
       
        for(int i=0;i<details.length;i++) {
            StringBuilder s = new StringBuilder();
            s.append(details[i].charAt(11));
            s.append(details[i].charAt(12));
            String ss = s.toString();
            int a = Integer.parseInt(ss);
            if(a>60) count++;
        }
        return count;
    }
}

class Solution {
    public String reversePrefix(String word, char ch) {
        int pos = -1;
        for(int i=0;i<word.length();i++) {
            if(word.charAt(i) == ch){
                pos = i;
                break;
            }
        }
        if(pos == -1) return word;
        StringBuilder sb = new StringBuilder(word.substring(0,pos+1));
        sb.reverse();
        sb.append(word.substring(pos+1));
        return sb.toString();
    }
}

class Solution {
    public int maxDepth(String s) {
        int count =0;
        int maxcount =0;
        for(int i=0;i<s.length();i++) {
            if(s.charAt(i) == '(') count++;
            else if(s.charAt(i) == ')')count--;
            if(count > maxcount) maxcount = count;
        }
        return maxcount;
    }
}

class Solution {
    
    public String finalString(String s) {
        StringBuilder sb = new StringBuilder();
        int i=0;
        while(i<s.length()){
            if(s.charAt(i) != 'i') sb.append(s.charAt(i));
            if(s.charAt(i) == 'i') sb.reverse();
            i++;
        }
        return sb.toString();
    }
}
