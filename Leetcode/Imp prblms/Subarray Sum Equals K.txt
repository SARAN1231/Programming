Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2


using 2 for loop is possible(refer subarray divides k for sol ) but this is efficient way


class Solution {
    public int subarraySum(int[] nums, int k) {
        HashMap<Integer,Integer> res = new HashMap<>();
        res.put(0,1);
        int sum =0;
        int count =0;
        for(int num : nums) {
            sum+=num;
           
            if(res.containsKey(sum-k)) {
                count += res.get(sum-k);
            }
            if(res.containsKey(sum)) {
                    res.put(sum,res.get(sum)+1);
            }
            else {
                res.put(sum,1);
            }
        }
        return count;
    }
}