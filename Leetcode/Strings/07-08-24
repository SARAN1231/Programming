class Solution {
    public String sortString(String s) {
        StringBuilder res = new StringBuilder();
        int[] freq = new int[26];
        for(char c : s.toCharArray()){
            freq[c-'a']++;
        }
        while(res.length() < s.length()){
            for(int i=0;i<26;i++){
                if(freq[i] >0){
                    res.append((char) (i+'a'));
                    freq[i]--;
                }
            }
            
            for(int i = 25;i>=0;i--){
                if(freq[i] > 0){
                    res.append((char)(i+'a'));
                    freq[i]--;
                }
            }
        }
        return res.toString();
    }
}

class Solution {
    public int minimizedStringLength(String s) {
        HashSet<Character> set = new HashSet<>();
        for(char c : s.toCharArray()){
            set.add(c);
        }
        return set.size();
    }
}

class Solution {
    public boolean judgeCircle(String moves) {
        int updown = 0;
        int leftright =0;

        for(int i=0;i<moves.length();i++){
            char c = moves.charAt(i);
            if(c=='U')updown++;
            else if(c == 'D')updown--;
            else if(c=='R') leftright++;
            else leftright--;
        }
        return (updown == 0 && leftright == 0);
    }
}

class Solution {
    public int minTimeToType(String word) {
        int count = word.length();
        int prev = 'a';
        for(int i=0;i<word.length();i++){
            int cur = word.charAt(i);
            int diff = Math.abs(cur-prev);
            count = count+Math.min(diff,26-diff);
            prev = cur;
        }
        return count;
    }
}
class Solution {
    public int val(String s) {
        int sum =0;
        for(int i=0;i<s.length();i++){
            
            int c = s.charAt(i)- 'a';
            sum = (sum*10)+c;
            
        }
        return sum;
    }
    public boolean isSumEqual(String firstWord, String secondWord, String targetWord) {
        int sum1 = val(firstWord);
        int sum2 = val(secondWord);
        int ans = val(targetWord);
        return (sum1+sum2 == ans);
        
    }
}
